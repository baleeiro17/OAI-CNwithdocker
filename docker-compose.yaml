version: '2'

services:
mysql:
 image: mysql:5.6
 restart: always
 container_name: mysql
 environment: # shell variables
   - MYSQL_ROOT_PASSWORD=linux
 networks:
    oai:
    ipv4_address: 192.188.2.10
oaihss: # Domain name of container
 image: mosaic5gecosys/oaihss:1.0
 restart: always # Operation Policy
 container_name: oaihss # Name of the container
 hostname: ubuntu # hostname
 privileged: true # Give the container the permission to manipulate the host
 depends_on: # Before starting this container, what should be ready
   - "mysql"
 volumes: # Mounted from host
   - /sys/fs/cgroup:/sys/fs/cgroup:ro
   - /lib/modules:/lib/modules:ro
   - ./conf.yaml:/root/config/conf.yaml:ro
 networks: # the network this container attached to
   oai:
    ipv4_address: 192.188.2.11
oaimme: # Domain name of container
 image: mosaic5gecosys/oaimme:1.0
 restart: always # Operation Policy
 container_name: oaimme # Name of the container
 hostname: ubuntu # hostname
 privileged: true # Give the container the permission to manipulate the host
 depends_on: # Before starting this container, what should be ready
   - "mysql"
   - "oaihss"
   - "oaispgw"
 volumes: # Mounted from host
   - /sys/fs/cgroup:/sys/fs/cgroup:ro
   - /lib/modules:/lib/modules:ro
   - ./conf.yaml:/root/config/conf.yaml:ro
 networks: # the network this container attached to
   oai:
    ipv4_address: 192.188.2.1
oaispgw: # Domain name of container
 image: mosaic5gecosys/oaispgw:1.0
 restart: always # Operation Policy
 container_name: oaispgw # Name of the container
 hostname: ubuntu # hostname
 privileged: true # Give the container the permission to manipulate the host
 depends_on: # Before starting this container, what should be ready
   - "mysql"
   - "oaihss"
 volumes: # Mounted from host
   - /sys/fs/cgroup:/sys/fs/cgroup:ro
   - /lib/modules:/lib/modules:ro
   - ./conf.yaml:/root/config/conf.yaml:ro
 networks: # the network this container attached to
   oai:
    ipv4_address: 192.188.2.2

networks: # Define our network here
oai:
 ipam:   
  driver: bridge
  driver_opts:
    com.docker.network.driver.mtu: 9000 # Configure mtu
  config:
    - subnet: 192.188.2.0/24